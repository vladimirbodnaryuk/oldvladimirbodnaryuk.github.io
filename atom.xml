<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-05-07T03:53:17.611Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/05/10/%D0%9F%D0%B8%D1%82%D0%BE%D0%BD.%20%D0%9A%D0%BE%D0%BD%D1%81%D0%BF%D0%B5%D0%BA%D1%82%20%D1%81%20%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D0%B0%D0%BC%D0%B8/"/>
    <id>http://example.com/2022/05/10/%D0%9F%D0%B8%D1%82%D0%BE%D0%BD.%20%D0%9A%D0%BE%D0%BD%D1%81%D0%BF%D0%B5%D0%BA%D1%82%20%D1%81%20%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%80%D0%B0%D0%BC%D0%B8/</id>
    <published>2022-05-10T12:23:35.319Z</published>
    <updated>2022-05-07T03:53:17.611Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Почему мы выбрали Python для этого интенсива?</strong></p><ul><li>Python простой</li></ul><p>Синтаксис Python легко выучить за очень короткое время и можно быстро приступить к созданию программы.</p><ul><li>Python популярный</li></ul><p>Разработчики любят его и продолжают выбирать для новых проектов, так что без работы не останетесь.</p><ul><li>Python универсальный</li></ul><p>Используется в самых разных сферах. Даже если вы не будете разработчиком, он может вам пригодиться.</p><p>Пример программы на языке Python: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">array = [<span class="number">45</span>, <span class="number">7</span>, -<span class="number">934</span>, <span class="number">0</span>, <span class="number">2839</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> array:</span><br><span class="line">   <span class="built_in">sum</span> += i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p><strong>Как запускаются программы на Python?</strong></p><p>Языки программирования по способу преобразования текста программы в машинный код (инструкции, которые может понимать и выполнять компьютер) делятся на компилируемые и интерпретируемые.</p><p>Текст программы на компилируемом языке программирования сначала полностью преобразовывается специальной программой (компилятором) в машинный код.<br>На выходе получается файл специального формата (исполняемый).<br>Именно его и выполняет компьютер. </p><p>Текст программы на интерпретируемом языке программирования сразу выполняется специальной программой (интерпретатором) следующим образом: каждая команда обрабатывается поочередно, после чего сразу выполняется эквивалентный ей набор команд на машинном языке.</p><p>Python является интерпретируемым языком.  Для запуска программы на вашем компьютере достаточно простого текстового редактора, где вы будете писать программный код,  и интерпретатора Python, который будет выполнять эту программу. <br>В рамках данного интенсива мы предлагаем пользоваться онлайн-ресурсами: <a href="https://repl.it/">https://repl.it/</a> (первая часть курса) и <a href="https://www.pythonanywhere.com/">https://www.pythonanywhere.com</a> (вторая часть курса) </p><p><strong>Программирование на Python</strong></p><p>Программу на любом языке программирования, в том числе и на Python, можно представить как алгоритм действий над некоторым набором данных. На этой лекции речь пойдет про данные и про работу с данными в Python.</p><p><strong>Ввод и вывод информации</strong></p><p>Для вывода информации на экран в Python существует функция:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><p>В скобках мы передаем функции то, что хотим распечатать на экране. <br>В этом примере распечатывается строка: <code>Hello, world!</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">34</span>)</span><br></pre></td></tr></table></figure><p>Распечатается число <code>34</code>.</p><p>Для того, чтобы внести данные в программу извне, существует функция <code>input().</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="built_in">input</span>(<span class="string">&quot;Введите Ваш возраст:&quot;</span>)</span><br></pre></td></tr></table></figure><p>При запуске данного примера на экране компьютера мы увидим подсказку “Введите Ваш возраст”,  а затем - поле для ввода данных. Введенное в это поле значение будет сохранено  в переменную <code>age</code>. </p><p><strong>Что такое переменная?</strong> </p><p>Переменная - это область памяти компьютера, выделенная для хранения информации. Переменную можно сравнить с ящиком или коробкой: имя переменной - это название коробки, а значение переменной - это то, что хранится в этой коробке.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">30</span></span><br></pre></td></tr></table></figure><p><strong>Простые типы данных</strong></p><p><em>Числа: типы int и float</em></p><p>Все объекты в Python принадлежат какому-то классу или, другими словами, у всех данных есть свой определенный тип. Чтобы узнать тип данных, можно воспользоваться следующим кодом:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">5</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="number">5.8</span>))</span><br></pre></td></tr></table></figure><p>В первом случае будет выведен результат <code>&lt;class &#39;int&#39;&gt;</code>, а во втором - <code>&lt;class &#39;float&#39;&gt;</code>. Целые числа принадлежат классу <code>int</code>,  дробные - классу <code>float</code>. </p><p>Также можно определить тип переменной, то есть того значения, которое хранится в этой переменной.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br><span class="line">a = <span class="number">8.9</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p>В первом случае будет распечатан тип <code>int</code>, во втором - <code>float</code>.</p><p><strong>Операции с числами</strong></p><p>Над объектами из классов <code>int</code> и <code>float</code> можно производить стандартные арифметические операции: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">5</span>+<span class="number">7</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span>-<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">64</span>/<span class="number">8</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">9</span>*<span class="number">8</span>+<span class="number">25</span>/<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>В Python есть 3 типа делений:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">17</span>/<span class="number">2</span>) <span class="comment">#обычное деление - результат 8.5</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">17</span>//<span class="number">2</span>) <span class="comment">#целочисленное деление - результат 8, целая часть при делении</span></span><br><span class="line"><span class="built_in">print</span>(<span class="number">17</span>%<span class="number">2</span>) <span class="comment">#деление с остатком - результат 1, остаток при делении</span></span><br></pre></td></tr></table></figure><p>Обратите внимание на текст после знака <code>#</code>. Так в Python обозначаются комментарии. Эта часть кода не обрабатывается интерпретатором, она нужна для вас и других разработчиков, которые будут работать с кодом.</p><p>Еще один вариант комментариев в коде:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;Различные варианты деления в Python</span></span><br><span class="line"><span class="string">обычное деление</span></span><br><span class="line"><span class="string">целочисленное деление</span></span><br><span class="line"><span class="string">деление с остатком&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>Возведение в степень: </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="number">3</span>**<span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="number">10</span>**(-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="number">25</span>**(<span class="number">1</span>/<span class="number">2</span>))</span><br></pre></td></tr></table></figure><p>Результат выполнения этой программы:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">729</span> </span><br><span class="line"><span class="number">0.1</span></span><br><span class="line"><span class="number">5.0</span></span><br></pre></td></tr></table></figure><p><em>Строки</em></p><p>Мы уже рассматривали строку  <code>&quot;Hello, world!&quot;</code>. Строки относятся к классу <code>str</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="string">&quot;Hello, world!&quot;</span>))</span><br></pre></td></tr></table></figure><p>Строки тоже можно складывать. При сложении они склеиваются.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">str1 = <span class="string">&#x27;Hello, &#x27;</span></span><br><span class="line">str2 = <span class="string">&#x27;world!&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(str1+str2)</span><br></pre></td></tr></table></figure><p>Результат:  <code>“Hello, world!”</code></p><p>Строку можно умножить на число:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(str1*<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>Результат - это повторение строки <code>str1</code> 5 раз.</p><p>Часто нам будет полезно уметь определять длину строки. Для этого существует функция <code>len( )</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(<span class="string">&#x27;строка&#x27;</span>))</span><br></pre></td></tr></table></figure><p>Кстати, строку можно обрамлять как одинарными кавычками, так и двойными.</p><p>Обратите внимание, что когда мы считываем данные с помощью функции <code>input( )</code>, мы считываем именно строковый тип. Если мы в дальнейшем хотим работать с введенными данными как с числами, то можно воспользоваться приведением типов:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">b = <span class="built_in">float</span>(<span class="built_in">input</span>()) </span><br></pre></td></tr></table></figure><p><em>Логический тип данных</em></p><p>В Python существует логический тип данных - класс <code>bool.</code> Переменные этого типа могут принимать только 2 значения: <code>True</code> и <code>False</code>. Подробнее с этим типом данных мы столкнемся, когда будем рассматривать логические выражения и условные конструкции.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="literal">True</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">True</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><p><em>Тип данных None</em></p><p>В Python существует зарезервированное слово <code>None</code>, которое обозначает отсутствие типа.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="literal">None</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))</span><br></pre></td></tr></table></figure><p><strong>Составные типы данных</strong></p><p><em>Списки</em> </p><p>Совокупность объектов в Python представляется в виде структур данных. </p><p>Список - это упорядоченная и изменяемая коллекция объектов произвольного типа.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>] <span class="comment"># список из целых чисел int</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(array)) <span class="comment"># класс list</span></span><br><span class="line">ar = [<span class="number">2</span>, <span class="number">4.6</span>, <span class="string">&#x27;str&#x27;</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]] <span class="comment"># список, состоящий из целого числа,</span></span><br><span class="line"><span class="comment"># из числа с плавающей точкой, из строки и из списка</span></span><br></pre></td></tr></table></figure><p>Обратиться к элементу списка мы можем по его индексу. Нумерация элементов начинается с 0.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(array[<span class="number">0</span>], array[<span class="number">1</span>]) <span class="comment"># печатаем 2 первых элемента в списке: 1 и 2</span></span><br><span class="line">array[<span class="number">0</span>] = <span class="number">0</span> <span class="comment"># в нулевой элемент списка кладем цифру 0</span></span><br></pre></td></tr></table></figure><p>Мы можем расширить список, добавить в конец списка новый элемент:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.append(<span class="number">8</span>)</span><br></pre></td></tr></table></figure><p>В список <code>array</code> добавили элемент 8 с помощью метода <code>append</code>.</p><p>Списки  можно складывать (склеивать):</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array2 = [<span class="number">9</span>, <span class="number">10</span>]</span><br><span class="line">new_array = array + array2</span><br></pre></td></tr></table></figure><p><code>new_array = [0, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code></p><p>Можно определить длину списка <code>new_array</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">len</span>(new_array)</span><br></pre></td></tr></table></figure><p>Найти сумму элементов списка:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(new_array)</span><br></pre></td></tr></table></figure><p>Сейчас наш список <code>new_array</code> выглядит так <code>[0, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code>. Предположим, что мы хотим добавить в список новый элемент 1. Мы можем добавить его в конец с помощью метода <code>append</code>. Но мы хотим, чтобы 1 оказалась между 0 и 2. Мы можем сортировать наш список по возрастанию с помощью метода <code>sort</code>.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">new_array.append(<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(new_array)</span><br><span class="line">new_array.sort()</span><br><span class="line"><span class="built_in">print</span>(new_array)</span><br></pre></td></tr></table></figure><p>В первом случае распечатается список <code>[0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 1]</code>.<br>А во втором - <code>[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]</code>.</p><p><em>Словари</em></p><p>Еще одна распространенная структура данных в Python -  это словари.</p><p>Словарь - это неупорядоченные коллекции произвольных объектов с доступом по ключу.</p><p>Пример словаря:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dictionary = &#123;<span class="string">&#x27;dog&#x27;</span> : <span class="string">&#x27;собака&#x27;</span>, <span class="string">&#x27;table&#x27;</span> : <span class="string">&#x27;стол&#x27;</span>, <span class="string">&#x27;computer&#x27;</span>: <span class="string">&#x27;компьютер&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>В данном словаре ключами являются слова на английском языке, а значения - слова на русском языке.</p><p>Мы можем обращаться к значениям словаря по ключу.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(dictionary[<span class="string">&#x27;dog&#x27;</span>]) <span class="comment"># печатаем строку &#x27;собака&#x27;</span></span><br><span class="line">dictionary[<span class="string">&#x27;dog&#x27;</span>] = <span class="string">&#x27;пес&#x27;</span> <span class="comment"># изменяем значение &#x27;собака&#x27; на &#x27;пес&#x27;</span></span><br><span class="line">dictionary[<span class="string">&#x27;laptop&#x27;</span>] = <span class="string">&#x27;ноутбук&#x27;</span> <span class="comment"># добавляем новый элемент с ключом </span></span><br><span class="line"><span class="comment"># &#x27;laptop&#x27; и значением &#x27;ноутбук&#x27; в словарь</span></span><br></pre></td></tr></table></figure><p><a href="https://pythonworld.ru/samouchitel-python">https://pythonworld.ru/samouchitel-python</a><br><a href="https://pythonworld.ru/osnovy/sintaksis-yazyka-python.html">https://pythonworld.ru/osnovy/sintaksis-yazyka-python.html</a></p><p>Рекомендованные статьи на английском языке:</p><p><a href="https://www.tutorialspoint.com/python/index.htm">https://www.tutorialspoint.com/python/index.htm</a><br><a href="https://www.learnpython.org/en/Hello%2C_World%21">https://www.learnpython.org/en/Hello%2C_World%21</a></p><p>Официальная документация:</p><p><a href="https://docs.python.org/3/">https://docs.python.org/3/</a></p><p>Если вы хотите попрактиковаться на большом количестве задач, то вам точно понравится <a href="https://www.hackerrank.com/">hackerrank</a>! </p><p>Это сервис с большим количеством задач с автоматической проверкой на разных языках программирования. Здесь вы сможете оттачивать свои навыки в решении задач, сложность которых постепенно увеличивается. А весь прогресс можно будет отслеживать в своём профиле.</p><p>Как приступить к решению задач на <a href="https://www.hackerrank.com/">hackerrank</a>:</p><ol><li>Зарегистрируйтесь на сайте:</li></ol><p> </p><p><strong><img src="https://lh3.googleusercontent.com/zUsUWuQiPxgM_AfEKmylD4iiJzQy9FybIW0dMbx0iHbpV_5kMjTHu9daohFOmHuuK7ZojhyI83DzuqwYuPTqOsutTIS6vIGfvDqKBmFBoGDMlmsD85VBDj2x4aRHjIcU42AacrXj"></strong></p><ol start="2"><li>Выберите язык программирования (конечно же Python 3):</li></ol><p><strong><img src="https://lh3.googleusercontent.com/5LoDj1A4vB3-YjDEWMkv5cg4LZ6auR7-Ldv1af8X1D5OgydqaMC7esEaJG9wDOgh9MfHbt2903irdo6lHXcnLdginJHraVgS2zBYoo8HVQFxTwOnwewBtYp6bjq0VERPf-kuY5KR"></strong><br>3. Сразу приступайте к решению задачи! Рекомендуем вам внимательно прочитать условие и только после этого запускать программу с помощью кнопки <strong>Run Code</strong>.</p><p><strong><img src="https://lh6.googleusercontent.com/vVtu-Vn9v7M7_FyS1BoZC0Zxs43UnlYZwQl0zY-s9k0vipKuGeiwZBaRswSJUAzuSgzP5SGZ9e1PWydtSPLXYKeUb_F178q1iAiq3_r-Bcxj0HU1tAKfmqjkf1fHaZz3esC-dOSH"></strong></p><p>После этого вы можете перейти на главную страницу <strong>Practice</strong>, где будет возможность выбрать задания по интересу. Удачи!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;Почему мы выбрали Python для этого интенсива?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python простой&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Синтаксис Python легко выучить з</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>1005</title>
    <link href="http://example.com/2022/05/10/1005/"/>
    <id>http://example.com/2022/05/10/1005/</id>
    <published>2022-05-10T12:02:41.000Z</published>
    <updated>2022-05-10T12:02:41.659Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/05/10/hello-world/"/>
    <id>http://example.com/2022/05/10/hello-world/</id>
    <published>2022-05-10T11:55:00.025Z</published>
    <updated>2022-05-10T11:55:00.025Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
